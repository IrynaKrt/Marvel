{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","ComicsPage","Helmet","name","content","AppBanner"],"mappings":"yJAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,mJIIxFC,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAOF,GACH,IAAK,UACD,OAAO,cAACG,EAAA,EAAO,IACnB,IAAK,UACD,OAAOD,EAAiB,cAACD,EAAS,IAAK,cAACE,EAAA,EAAO,IACnD,IAAK,YACD,OAAO,cAACF,EAAS,IACrB,IAAK,QACD,OAAO,cAACG,EAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,8BAoEbC,EAhEI,WACf,MAAoCC,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAChC,EAA4CF,oBAAS,GAAM,mBAApDL,EAAc,KAAEQ,EAAiB,KACxC,EAA4BH,mBAAS,GAAE,mBAAhCI,EAAM,KAAEC,EAAS,KACxB,EAAsCL,oBAAS,GAAM,mBAA9CM,EAAW,KAAEC,EAAc,KAElC,EAA4CC,cAArCC,EAAY,EAAZA,aAAchB,EAAO,EAAPA,QAASiB,EAAU,EAAVA,WAE9BC,qBAAU,WACNC,EAAUR,GAAQ,KAEnB,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACbV,GAAVU,GACAJ,EAAaL,GACRU,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAGzBK,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZf,EAAc,GAAD,mBAAKD,GAAU,YAAKe,KACjCb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeU,IAuBnB,OACI,sBAAKE,UAAU,eAAc,UAC5B3B,EAAWC,GAAS,kBAtBzB,SAAsBZ,GAClB,IAAMuC,EAAQvC,EAAIwC,KAAI,SAACC,EAAMC,GACzB,OACI,oBAAIJ,UAAU,eAAc,SACxB,eAAC,IAAI,CAACK,GAAE,kBAAaF,EAAKG,IAAK,UAC3B,qBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,MAAOV,UAAU,qBACrD,qBAAKA,UAAU,oBAAmB,SAAEG,EAAKO,QACzC,qBAAKV,UAAU,qBAAoB,SAAEG,EAAKQ,YAJhBP,MAU1C,OACI,oBAAIJ,UAAU,eAAc,SACvBC,IAOkBW,CAAY9B,KAAaN,GAChD,wBAASqC,SAAUrC,EACVsC,MAAO,CAAC,QAAY3B,EAAc,OAAS,SAC3Ca,UAAU,mCACVe,QAAS,kBAAMtB,EAAUR,IAAQ,SACtC,qBAAKe,UAAU,QAAO,SAAC,oBC7DxBgB,UAhBK,WAChB,OACI,qCACI,eAACC,EAAA,EAAM,WACH,sBACIC,KAAK,cACLC,QAAQ,iCAEZ,gCAAO,mBAEX,cAACC,EAAA,EAAS,IACV,cAAC,EAAU","file":"static/js/7.4088f3e6.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch(process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'));\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n        {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button  disabled={newItemLoading}\n                     style={{'display' : comicsEnded ? 'none' : 'block'}}\n                     className=\"button button__main button__long\"\n                     onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage  = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                    />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}