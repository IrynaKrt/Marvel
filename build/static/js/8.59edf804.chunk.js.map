{"version":3,"sources":["components/skeleton/Skeleton.js","utils/setContent.js","components/pages/SinglePage.js"],"names":["Skeleton","className","setContent","process","Component","data","Spinner","ErrorMessage","Error","SinglePage","dataType","id","useParams","useState","setData","useMarvelService","setProcess","getComics","getCharacter","clearError","useEffect","updateData","then","onDataLoaded"],"mappings":"mIAmBeA,EAjBE,WACb,OACI,qCACI,mBAAGC,UAAU,eAAc,SAAC,iDAC5B,sBAAKA,UAAU,WAAU,UACrB,sBAAKA,UAAU,yBAAwB,UACnC,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,iCCMhBC,IAfI,SAACC,EAASC,EAAWC,GACpC,OAAOF,GACH,IAAK,UACD,OAAO,cAAC,EAAQ,IACpB,IAAK,UACD,OAAO,cAACG,EAAA,EAAO,IACnB,IAAK,YACD,OAAO,cAACF,EAAS,CAACC,KAAMA,IAC5B,IAAK,QACD,OAAO,cAACE,EAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,+B,oHC8BbC,UArCI,SAAH,GAA+B,IAA1BL,EAAS,EAATA,UAAWM,EAAQ,EAARA,SACjBC,EAAMC,cAAND,GACP,EAAwBE,mBAAS,MAAK,mBAA/BR,EAAI,KAAES,EAAO,KACpB,EAAmEC,cAA5DZ,EAAO,EAAPA,QAASa,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAAcC,EAAU,EAAVA,WAErDC,qBAAU,WACNC,MAED,CAACV,IAEJ,IAAMU,EAAa,WAGf,OAFAF,IAEQT,GACJ,IAAK,QACDO,EAAUN,GAAIW,KAAKC,GAAcD,MAAK,kBAAMN,EAAW,gBACvD,MACJ,IAAK,YACDE,EAAaP,GAAIW,KAAKC,GAAcD,MAAK,kBAAMN,EAAW,gBAC1D,MACJ,QACI,MAAM,IAAIR,MAAM,wBAItBe,EAAe,SAAClB,GAClBS,EAAQT,IAGZ,OACI,qCACI,cAAC,IAAS,IACTH,YAAWC,EAASC,EAAWC","file":"static/js/8.59edf804.chunk.js","sourcesContent":["import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data}/>;\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const {process, setProcess, getComics, getCharacter, clearError} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n            // eslint-disable-next-line\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getComics(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                    break;\r\n                default:\r\n                    throw new Error('Unexpected request');\r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <AppBanner/>\r\n                {setContent(process, Component, data)}\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;\r\n"],"sourceRoot":""}